Continuing the development. I managed to fix a glaring issue with the acceptance tests. No longer will any behave
test scenarios generate obscene amounts of python processes, each of them a webserver. I simply only turn on the
server once for the entire run. I might need to backtrack on this and actually just do it per feature. Yes, I like that.
Anyway, that's fixed and the API testing can commence.

I ended up implementing the addBook API which requires authentication. Works like a charm I think, for a single book
anyway. Don't know if I will need an API for addition tons of books yet, probably not (YAGNI). I'll have a go at
refactoring the API tomorrow to handle JSON too. Additionally, I'll probably refactor the client code to send JSON
instead of sending args in the URL as parameters (looks lame). Anyway, lots of good progress. At this point, I want to
implement delete and then lastly implement a search functionality + shopping cart. At that point, I will be very
confident with this fairly simple webpage I've been working on, and can move onto my other projects in my portfolio.
Eventually, I want to move it all to a CD pipeline and develop with that continuous feedback loop.
It will be a challenge to do this for the first time given that I have an entire project developed in Windows under me.
It should be fun the first time, and at the very least show me the huge reason of why implementing the CD pipeline is
very important for a project that's larger than a few functions and classes, especially when any amount of I/O becomes
involved! I bet I'll actually hate myself for NOT going into CD as soon as I had my first integration tests up (oh well).
As an additional challenge, I can port the CD pipeline to a Linux docker pod.